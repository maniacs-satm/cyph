#!/bin/bash

# Google Cloud reverse proxy setup script for Ubuntu 16.04

cert='LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIZERDQ0JseWdBd0lCQWdJUURRbWRtdTh5bms5ZTNnSmJSZDhIQVRBTkJna3Foa2lHOXcwQkFRc0ZBREIxDQpNUXN3Q1FZRFZRUUdFd0pWVXpFVk1CTUdBMVVFQ2hNTVJHbG5hVU5sY25RZ1NXNWpNUmt3RndZRFZRUUxFeEIzDQpkM2N1WkdsbmFXTmxjblF1WTI5dE1UUXdNZ1lEVlFRREV5dEVhV2RwUTJWeWRDQlRTRUV5SUVWNGRHVnVaR1ZrDQpJRlpoYkdsa1lYUnBiMjRnVTJWeWRtVnlJRU5CTUI0WERURTFNRGd6TURBd01EQXdNRm9YRFRFM01URXlOekV5DQpNREF3TUZvd2dlMHhIVEFiQmdOVkJBOE1GRkJ5YVhaaGRHVWdUM0puWVc1cGVtRjBhVzl1TVJNd0VRWUxLd1lCDQpCQUdDTnp3Q0FRTVRBbFZUTVJrd0Z3WUxLd1lCQkFHQ056d0NBUUlUQ0VSbGJHRjNZWEpsTVJBd0RnWURWUVFGDQpFd2MxTmpBd01ETTVNU0l3SUFZRFZRUUpFeGt6TlRBd0lGTnZkWFJvSUVSMWNHOXVkQ0JJYVdkb2QyRjVNUTR3DQpEQVlEVlFRUkV3VXhPVGt3TVRFTE1Ba0dBMVVFQmhNQ1ZWTXhFVEFQQmdOVkJBZ1RDRVJsYkdGM1lYSmxNUTR3DQpEQVlEVlFRSEV3VkViM1psY2pFVE1CRUdBMVVFQ2hNS1EzbHdhQ3dnU1c1akxqRVJNQThHQTFVRUF4TUlZM2x3DQphQzVqYjIwd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN2aTFOOWxhbE01cHNKDQpydzhMNVU1OGJkZUZnTW5oT2ZzNy8zY0FKelBicE1tMjBLdFM4ejBSNzRhMHRaQVBIZkxFNHYrdUluSkJocmlODQpTekZtKzJIVVhWVFJjRmJZNGUyRHVCZHhYTERiMmpQWlZKU01JblRqbTM0aGVCelNYcmh1NHlYaVNyWS9zZWc3DQpOUzQ0UFJOdUcyb2g3YVppSyt3UmpIUXMxekV6SUR4MFBuaERncEVUSFZSMWY4Z29USVJXWHJoa0hhNjFGTXYzDQpzbEVlakpjR0krWUxCSnFEWkNTS1dUOUdoMC9nSUxRSFdMaVphaHNhbU1XSW8xRTMzVFJDRS9RNXM5dkI2aGowDQpGTjdDdkhqL2FSSDFJdFdSQ0g5Wlk0OUFhYlM5czFva3g2aVBobm1veGd2R0s0QjAwajNzbVhRTFdtNUxiMlRuDQpMa1FZMHNDZEFnTUJBQUdqZ2dPRk1JSURnVEFmQmdOVkhTTUVHREFXZ0JROTAxQ2wxcUN0N3ZOS1lBcGwweUhVDQorUGpXRHpBZEJnTlZIUTRFRmdRVUpkSkNBOS9WY2pBcnloeVRxVStyZ3FXWnpJRXdMd1lEVlIwUkJDZ3dKb0lJDQpZM2x3YUM1amIyMkNESGQzZHk1amVYQm9MbU52YllJTVlYQnBMbU41Y0dndVkyOXRNQTRHQTFVZER3RUIvd1FFDQpBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdkUVlEVlIwZkJHNHdiREEwDQpvREtnTUlZdWFIUjBjRG92TDJOeWJETXVaR2xuYVdObGNuUXVZMjl0TDNOb1lUSXRaWFl0YzJWeWRtVnlMV2N4DQpMbU55YkRBMG9ES2dNSVl1YUhSMGNEb3ZMMk55YkRRdVpHbG5hV05sY25RdVkyOXRMM05vWVRJdFpYWXRjMlZ5DQpkbVZ5TFdjeExtTnliREJMQmdOVkhTQUVSREJDTURjR0NXQ0dTQUdHL1d3Q0FUQXFNQ2dHQ0NzR0FRVUZCd0lCDQpGaHhvZEhSd2N6b3ZMM2QzZHk1a2FXZHBZMlZ5ZEM1amIyMHZRMUJUTUFjR0JXZUJEQUVCTUlHSUJnZ3JCZ0VGDQpCUWNCQVFSOE1Ib3dKQVlJS3dZQkJRVUhNQUdHR0doMGRIQTZMeTl2WTNOd0xtUnBaMmxqWlhKMExtTnZiVEJTDQpCZ2dyQmdFRkJRY3dBb1pHYUhSMGNEb3ZMMk5oWTJWeWRITXVaR2xuYVdObGNuUXVZMjl0TDBScFoybERaWEowDQpVMGhCTWtWNGRHVnVaR1ZrVm1Gc2FXUmhkR2x2YmxObGNuWmxja05CTG1OeWREQU1CZ05WSFJNQkFmOEVBakFBDQpNSUlCZ0FZS0t3WUJCQUhXZVFJRUFnU0NBWEFFZ2dGc0FXb0Fkd0NrdVFtUXRCaFlGSWU3RTZMTVozQUtQRFdZDQpCUGtiMzdqamQ4ME95QTNjRUFBQUFWSU96dFkrQUFBRUF3QklNRVlDSVFDY0crZExReFlLdW5iRlo5aWhuTjJqDQpKcWd0dmY3ckFRM2xzSUNldzl6Tm5BSWhBTFNQVER1ZEFMVkEwNHJ6VXR0T3BaSFVSNFpkZjdETHJOSHJlOFJ1DQo4RlBmQUhjQWFQYVkrQjlrZ3I0NmpPNjVLQjFNL0hGUlhXZVQxRVRSQ21lc3UwOVArOFFBQUFGU0RzN1dHUUFBDQpCQU1BU0RCR0FpRUFzK3BpcndBTGZSSkNtcnllbzk4QnFzQzFpbDVaSlJNMHI4aUNYNWZjR2VRQ0lRRGhQRjM2DQpER3NYMlBHZGNkM3BvSC9ZS01pVXJjWE5sMHdxODVCRkEzd1E1UUIyQUZZVUJwb3YxOExzMC9YaHZVU3lQc2RHDQpkcm04bVJGY3dPK1VtRlhXaWREZEFBQUJVZzdPMXZ3QUFBUURBRWN3UlFJZ096bWVUTStOZzZYVyt5dHZuTnRDDQpKbSthVENUL3owTWRrU0NNcStvUVFUQUNJUURGUVZ1NUQ3TkZYZUlSUFZjME45MjdqbGlwOUt0OExCOXZoeGVxDQpmK2dtTVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWlCbjFMRFJ5bk1jeGVHNFlGT2dLSUo1MEVPMEZBQm9NDQp0OUdGTXNlTHNubXNWK0Z3R3R4c3dqZEtaR3JnajEyV3lzRThHM1lmTXhkREtTck12eHZYUmdHMTlvdXZiTVdlDQpqMU9kc2VETHhoejYrZUZZZzlTTFR4a1NrOTd2NlkzTDdHNkk1Y0VSZkt5WjFYSllsaTlmbUlkTW1NSys4T2h1DQpUWW5STGIvTkxIbmMvSGhtL2lMZGRiT3Q4alptcTVvSTk3eDE1aVZvQTZkNW9kUDhDWTRvaW0rUmxBQjdVcFlODQpydzZ0L3llY01nb2wyazB4WlJROWNyZVg5RVNldmNtcDA0aDB5ejE4aXZZN2pLbG91TEE5WE0vWHNSanNCVVFsDQprbm92dHlJTDdncDlxU2lwdlU2UTJVOTF6eDJBd3ZRS3hHRXJPa1NkUm9JeER3MjQrbkpuRFE9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFdGpDQ0E1NmdBd0lCQWdJUURIbXBSTENNRVpVZ2ttRmY0bXNkZ3pBTkJna3Foa2lHOXcwQkFRc0ZBREJzDQpNUXN3Q1FZRFZRUUdFd0pWVXpFVk1CTUdBMVVFQ2hNTVJHbG5hVU5sY25RZ1NXNWpNUmt3RndZRFZRUUxFeEIzDQpkM2N1WkdsbmFXTmxjblF1WTI5dE1Tc3dLUVlEVlFRREV5SkVhV2RwUTJWeWRDQklhV2RvSUVGemMzVnlZVzVqDQpaU0JGVmlCU2IyOTBJRU5CTUI0WERURXpNVEF5TWpFeU1EQXdNRm9YRFRJNE1UQXlNakV5TURBd01Gb3dkVEVMDQpNQWtHQTFVRUJoTUNWVk14RlRBVEJnTlZCQW9UREVScFoybERaWEowSUVsdVl6RVpNQmNHQTFVRUN4TVFkM2QzDQpMbVJwWjJsalpYSjBMbU52YlRFME1ESUdBMVVFQXhNclJHbG5hVU5sY25RZ1UwaEJNaUJGZUhSbGJtUmxaQ0JXDQpZV3hwWkdGMGFXOXVJRk5sY25abGNpQkRRVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DDQpnZ0VCQU5kVHBBUlIrSm1tRmtoTFp5ZXFrMG5RT2UwTXNMQUFoL0ZuS0lhRmpJNWoycnl4UURqaTAvWHNwUVVZDQp1RDAreFprWE11d1lqUHJ4REtaa0lZWExCeEEwc0ZLSUt4OW9tOUt4anhLd3M5TG5pQjhmN3poM1ZGTmZnSGsvDQpMaHFxcUI1TEt3MnJ0Mk81TmJkOUZMeFpTOTlSU3RLaDRnemlrSUtIYXE3cTEyVFdtRlhvL2E4YVVHeFV2Qkh5DQovVXJ5bmJ0L0R2VFZ2bzRXaVJKVjJNQnhOTzcyM0Mzc3hJY2xobzNZSWVTd1RReUozRGttRjkzMjE1U0YyQVFoDQpjSjF2Yi85Y3VobmhSY3RXVnloK0hBMUJWNnEzdUNlN3NlVDZLdThoSTNVYXJTMmJoaldNbkhlMWM2M1lsQzNrDQo4d3lkN3NGT1luNFh3SEdlTE43eCtSQW9HVE1DQXdFQUFhT0NBVWt3Z2dGRk1CSUdBMVVkRXdFQi93UUlNQVlCDQpBZjhDQVFBd0RnWURWUjBQQVFIL0JBUURBZ0dHTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGDQpCUWNEQWpBMEJnZ3JCZ0VGQlFjQkFRUW9NQ1l3SkFZSUt3WUJCUVVITUFHR0dHaDBkSEE2THk5dlkzTndMbVJwDQpaMmxqWlhKMExtTnZiVEJMQmdOVkhSOEVSREJDTUVDZ1BxQThoanBvZEhSd09pOHZZM0pzTkM1a2FXZHBZMlZ5DQpkQzVqYjIwdlJHbG5hVU5sY25SSWFXZG9RWE56ZFhKaGJtTmxSVlpTYjI5MFEwRXVZM0pzTUQwR0ExVWRJQVEyDQpNRFF3TWdZRVZSMGdBREFxTUNnR0NDc0dBUVVGQndJQkZoeG9kSFJ3Y3pvdkwzZDNkeTVrYVdkcFkyVnlkQzVqDQpiMjB2UTFCVE1CMEdBMVVkRGdRV0JCUTkwMUNsMXFDdDd2TktZQXBsMHlIVStQaldEekFmQmdOVkhTTUVHREFXDQpnQlN4UHNOcEEvaS9Sd0hVbUNZYUNBTHZZMlFyd3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW5iYlFrSWJoDQpoZ0x0eGFEd05CeDB3WTEyeklZS3FQQktpa0xXUDhpcFRhMThDSzNtdGxDNG9ocE5pQWV4S1NIYzU5ckdQQ0hnDQo0eEZKY0t4NkhRR2t5aEU2VjZ0OVZ5cEFkUDNUSFlVWVVOOVhSM1doZlZVZ0xrYzNVSEtNZjRJYjBtS1BMUU5hDQoyc1BJb2M0c1VxSUFZK3R6dW5ISVNTY2psMlNGbmpnT3JXTm9QTHBTZ1ZoNW95d00zOTV0NnpIeXVxQjhiUEVzDQoxT0c5ZDRRM0E4NHl0Y2lhZ1JwS2trNDdScHFGL29PaStaNk1vOHdOWHJNOXp3UjRqeFFVZXpLY3h3Q21YTVMxDQpvVldOV2xab3BDSndxanlCY2RtZHFFVTc5T1gyb2xIZHgzdGk2RzhNZE91NDJ2aS9odzE1VUpHUW14ZzdrVmtuDQo4VFVvRTZzbWZ0WDNlZz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo='
key='ASK RYAN FOR THIS'


cd $(cd "$(dirname "$0")"; pwd)

sed -i 's/# deb /deb /g' /etc/apt/sources.list
sed -i 's/\/\/.*archive.ubuntu.com/\/\/archive.ubuntu.com/g' /etc/apt/sources.list

export DEBIAN_FRONTEND=noninteractive
apt-get -y --force-yes update
apt-get -y --force-yes upgrade
apt-get -y --force-yes purge apache* mysql*
apt-get -y --force-yes install apt dpkg nginx openssl
do-release-upgrade -f DistUpgradeViewNonInteractive

mkdir /etc/nginx/ssl
chmod 600 /etc/nginx/ssl

echo "${cert}" | base64 --decode > /etc/nginx/ssl/cert.pem
echo "${key}" | base64 --decode > /etc/nginx/ssl/key.pem
openssl dhparam -out /etc/nginx/ssl/dhparams.pem 2048

keyHash="$(openssl rsa -in /etc/nginx/ssl/key.pem -outform der -pubout | openssl dgst -sha256 -binary | openssl enc -base64)"
backupHash='unPe8YYMLOhkaAWcjfFF1q571QqcrI5NUfP+0eBT/po='


cat > /etc/nginx/nginx.conf << EndOfMessage
user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections $(ulimit -n);
	multi_accept off;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;
	server_names_hash_bucket_size 64;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log off;
	error_log /dev/null crit;

	gzip on;
	gzip_http_version 1.0;
	gzip_static always;

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;

		ssl_certificate ssl/cert.pem;
		ssl_certificate_key ssl/key.pem;
		ssl_dhparam ssl/dhparams.pem;

		ssl_session_timeout 1d;
		ssl_session_cache shared:SSL:50m;
		ssl_session_tickets off;

		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
		ssl_prefer_server_ciphers on;

		add_header Public-Key-Pins 'max-age=5184000; includeSubdomains; pin-sha256="${keyHash}"; pin-sha256="${backupHash}"';
		add_header Strict-Transport-Security 'max-age=31536000; includeSubdomains; preload';

		ssl_stapling on;
		ssl_stapling_verify on;

		server_name api.cyph.com;

		location / {
			rewrite /(.*) /\$1 break;
			proxy_pass https://prod-dot-default-dot-cyphme.appspot.com/;
			proxy_hide_header Public-Key-Pins;
			proxy_hide_header Strict-Transport-Security;
		}

		location /v0/b/cyphme.appspot.com {
			add_header 'Access-Control-Allow-Origin' '*';
			proxy_pass https://firebasestorage.googleapis.com;
			proxy_hide_header Public-Key-Pins;
			proxy_hide_header Strict-Transport-Security;
		}
	}
}
EndOfMessage


cat > /systemupdate.sh << EndOfMessage
#!/bin/bash

export DEBIAN_FRONTEND=noninteractive
apt-get -y --force-yes update
apt-get -y --force-yes -o Dpkg::Options::=--force-confdef upgrade
do-release-upgrade -f DistUpgradeViewNonInteractive

reboot
EndOfMessage
chmod +x /systemupdate.sh


updatehour=$RANDOM
let 'updatehour %= 24'
updateday=$RANDOM
let 'updateday %= 7'

crontab -l > /tmp/cyph.cron
echo "45 ${updatehour} * * ${updateday} /systemupdate.sh" >> /tmp/cyph.cron
crontab /tmp/cyph.cron
rm /tmp/cyph.cron


cd "${dir}"
rm api.sh
reboot
